name: Update kernel images

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container: 'debian:bullseye'
    env:
      kver: ""
      sver: ""
    
    steps: 
    - name: update apt
      run: apt-get update
      
    - name: install needed packages
      run: apt-get -y install build-essential git gawk nano libncurses5-dev lsb-release kmod cpio libssl-dev rsync apt-transport-https gnupg wget reprepro equivs curl apt-utils linux-source linux-image-amd64 libelf-dev dwarves
    
    - name: grab kernel source version 
      run: echo "kver=$(dpkg -l | grep "ii  linux-source  " | gawk '{print $3}')" >> $GITHUB_ENV
    
    - name: grab kernel short version 
      run: echo "sver=$(dpkg -l | grep "linux-source-" | gawk '{print $2}' | gawk -F- '{print $3}')" >> $GITHUB_ENV
      
    ### check version against list, quit if we already built it  
      
    - name: unpack kernel source
      run: tar xf /usr/src/linux-source-${{env.sver}}.tar.xz
      
    - name: copy config into source
      run: cp "$(ls /boot/conf* | tail -n 1)" linux-source-${{env.sver}}/.config
      
    - name: add tpm to config
      run: cd linux-source-${{env.sver}}/; echo "CONFIG_TCG_TIS_SPI_CR50=y" >> .config
      
    - name: remove uefi cert from config
      run: cd linux-source-${{env.sver}}/; echo CONFIG_SYSTEM_TRUSTED_KEYS=\"\" >> .config
      
    - name: make oldconfig
      run: cd linux-source-${{env.sver}}/; make oldconfig
      
    - name: make kernel package
      run: cd linux-source-${{env.sver}}/; make -j$(nproc) ARCH=x86_64 bindeb-pkg
      
    - name: ls
      run: ls
    
      
      
      
      
    
      
